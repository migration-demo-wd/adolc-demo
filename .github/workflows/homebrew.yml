name: Update Homebrew Formula

on:
  workflow_run:
    workflows: ["Publish"]  # Name of the first workflow
    types:
      - completed

jobs:
  update-formula:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Only run if the previous workflow was successful
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Generate Homebrew Formula
        id: generate_formula
        run: |
          # Your logic to generate the Homebrew formula after the release
          SOFTRWARE_NAME="adolc"
          VERSION=$(git describe --tags --abbrev=0)  # Ensure you extract the version properly
          BASE_URL="https://github.com/migration-demo-wd/adolc-demo/releases/download/$VERSION"
          
          # Define paths for each platform's asset
          LINUX_X64_URL="$BASE_URL/$SOFTWARE_NAME-linux-x64.tar.gz"
          LINUX_X64_SHA256=$(curl -sSL "$LINUX_X64_URL" | shasum -a 256 | awk '{print $1}')
          
          LINUX_ARM_URL="$BASE_URL/$SOFTWARE_NAME-linux-arm64.tar.gz"
          LINUX_ARM_SHA256=$(curl -sSL "$LINUX_ARM_URL" | shasum -a 256 | awk '{print $1}')
          
          MAC_X64_URL="$BASE_URL/$SOFTWARE_NAME-osx-x64.tar.gz"
          MAC_X64_SHA256=$(curl -sSL "$MAC_X64_URL" | shasum -a 256 | awk '{print $1}')
          
          MAC_ARM_URL="$BASE_URL/$SOFTWARE_NAME-osx-arm64.tar.gz"
          MAC_ARM_SHA256=$(curl -sSL "$MAC_ARM_URL" | shasum -a 256 | awk '{print $1}')

          FORMULA_PATH=./adolc.rb

          cat <<EOF > $FORMULA_PATH
          class Adolc < Formula
            desc "Checker wether a Ado should be updated"
            homepage "https://github.com/migration-demo-wd/adolc-demo"
            version "$VERSION"
            license "MIT"
            
            # Define all platform-specific URLs and SHA256 checksums
            if Hardware::CPU.intel?
              url "$MAC_X64_URL"
              sha256 "$MAC_X64_SHA256"
            elsif Hardware::CPU.arm?
              url "$MAC_ARM_URL"
              sha256 "$MAC_ARM_SHA256"
            end

            # Linux (assuming x64)
            if OS.linux?
              if Hardware::CPU.intel?
                url "$LINUX_X64_URL"
                sha256 "$LINUX_X64_SHA256"
              elsif Hardware::CPU.arm?
                url "$LINUX_ARM_URL"
                sha256 "$LINUX_ARM_SHA256"
              end
            end

            def install
              # Installation commands depending on platform
              bin.install "adolc"
            end
          end
          EOF

      - name: Push Formula to Homebrew Tap Repository
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}  # Use the PAT for authentication
        run: |
          # Clone the Tap repository
          git clone https://github.com/migration-demo-wd/homebrew-tap.git tap_repo
          cd tap_repo

          # Ensure the Formula directory exists; create if it doesn't
          mkdir -p Formula

          # Copy the generated formula to the tap repository
          cp ../adolc.rb ./Formula/adolc.rb  # Adjust the path as needed

          # Setup Git
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          
          # Commit and Push
          git add -A
          git commit -m "Add/update Homebrew formula for ${{ github.event.workflow_run.head_commit.message }}" --allow-empty
          
          # Push to a new branch and create a PR
          git push origin HEAD:updates-for-pr  # Push to a new branch
          payload='{"title":"Add/update formula for version '${{ github.event.workflow_run.head_commit.message }}'","head":"updates-for-pr","base":"main"}'
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/whiteducksoftware/homebrew-tap/pulls -d "$payload"